from aiogram import Router, Bot, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.keyboards.inline import web_app_markup
from bot.utils.states import UserForm
from bot.keyboards.builders import user_name_keyboard
from bot.keyboards.reply import remove_keyboard, gender_select_keyboard, about_skip_keyboard
from db.models.user import User
import cloudinary
import cloudinary.uploader

cloudinary.config(
    cloud_name="dndstfjbu",
    api_key="399658246291491",
    api_secret="lSMOzkIj3JUOnNpZ0rvHz9pIDC4"
)

router = Router()


@router.message(Command("form"))
async def user_form(message: Message, state: FSMContext):
    user = await User.filter(telegram_id=message.from_user.id).first()
    if user:
        return message.answer(text="–í–∏ –≤–∂–µ –∑–∞—Ä–µ–≥—ñ—Å—Ç—Ä–æ–≤–∞–Ω—ñ.")
    else:
        await state.set_state(UserForm.name)
        await message.answer(
            text="–î–∞–≤–∞–π—Ç–µ –ø–æ—á–Ω–µ–º–æ, –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î —ñ–º'—è.",
            reply_markup=await user_name_keyboard(message.from_user.first_name)
        )


@router.message(UserForm.name)
async def user_age(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(UserForm.age)
    await message.answer(
        text="–°–∫—ñ–ª—å–∫–∏ –≤–∞–º —Ä–æ–∫—ñ–≤? (–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ 13 —Ä–æ–∫—ñ–≤.)",
        reply_markup=remove_keyboard
    )


@router.message(UserForm.age)
async def user_gender(message: Message, state: FSMContext):
    if message.text.isdigit():
        await state.update_data(age=message.text)
        await state.set_state(UserForm.gender)
        await message.answer(
            text="–•—Ç–æ –≤–∏?",
            reply_markup=gender_select_keyboard
        )
    else:
        await message.answer(text="–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ —â–µ —Ä–∞–∑!")


@router.message(UserForm.gender)
async def user_city(message: Message, state: FSMContext):
    if message.text.lower() == "üë® —Ö–ª–æ–ø–µ—Ü—å":
        gender = "–•–ª–æ–ø–µ—Ü—å"
    elif message.text.lower() == "üëß –¥—ñ–≤—á–∏–Ω–∞":
        gender = "–î—ñ–≤—á–∏–Ω–∞"
    else:
        await message.answer(text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É üëá", reply_markup=gender_select_keyboard)
        return

    await state.update_data(gender=gender)
    await state.set_state(UserForm.city)
    await message.answer(
        text="–ó —è–∫–æ–≥–æ –≤–∏ –º—ñ—Å—Ç–∞?",
        reply_markup=remove_keyboard
    )


@router.message(UserForm.city)
async def user_about(message: Message, state: FSMContext):
    if message.text.isdigit():
        await message.answer(text="–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ.")
    else:
        await state.update_data(city=message.text)
        await state.set_state(UserForm.about)
        await message.answer(
            text="–†–æ–∑–∫–∞–∂—ñ—Ç—å —Ç—Ä–æ—à–∫–∏ –ø—Ä–æ —Å–µ–±–µ. (–ê–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø—Ä–æ–≤—É—Å—Ç–∏—Ç–∏)",
            reply_markup=about_skip_keyboard
        )


@router.message(UserForm.about)
async def user_photo(message: Message, state: FSMContext):
    if message.text.lower() == "ü™™ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏":
        await state.update_data(about=None)
    else:
        await state.update_data(about=message.text)

    await state.set_state(UserForm.photo)
    await message.answer(
        text="–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤–æ—î —Ñ–æ—Ç–æ.",
        reply_markup=remove_keyboard
    )


@router.message(UserForm.photo, F.photo)
async def user_reg(message: Message, state: FSMContext, bot: Bot):
    photo_file_id = message.photo[-1].file_id
    data = await state.get_data()
    await state.clear()

    formatted_text = ("<b>‚ú® –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:</b> \n\n"
                      f"<b>üëã –Ü–º'—è:</b> {data.get('name')} | @{message.from_user.username}\n"
                      f"<b>üéÄ –í—ñ–∫:</b> {data.get('age')}\n"
                      f"<b>üåÜ –ú—ñ—Å—Ç–æ:</b> {data.get('city')}\n"
                      f"<b>üë´ –°—Ç–∞—Ç—å:</b> {data.get('gender')}\n"
                      f"<b>‚úçÔ∏è –ü—Ä–æ –≤–∞—Å:</b> \n"
                      f"<i>{data.get('about')}</i>")

    await message.answer_photo(
        photo=photo_file_id,
        caption=formatted_text,
        reply_markup=web_app_markup
    )

    file = await bot.get_file(photo_file_id)
    file_path = file.file_path
    await bot.download_file(file_path, f"photos/{message.from_user.id}.jpg")
    photo_url = cloudinary.uploader.upload(f"photos/{message.from_user.id}.jpg",
                                           folder="photos",
                                           public_id=f"{message.from_user.id}")

    await User.create(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        name=message.from_user.first_name,
        age=data.get('age'),
        gender=data.get('gender'),
        city=data.get('city'),
        about=data.get('about'),
        photo=photo_url.get('url')
    )


@router.message(UserForm.photo, ~F.photo)
async def user_photo_error(message: Message, state: FSMContext):
    await message.answer("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ!")
